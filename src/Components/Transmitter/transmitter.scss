@import "../../variables";

$largeTriangleSize: 15px;
$smallTriangleSize: 12px;
$bubbleColor: black;

.transmitter {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  margin-top: 1em;
  margin-bottom: -1em;

  .value {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    font-weight: bold;
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 20px;
    transform: translateY(25%);
    opacity: 0;
    z-index: 0;
    position: relative;
    transition: 1s;
    border:2px solid $bubbleColor;

    &:before {
      content: "";
      position: absolute;
      bottom: -$largeTriangleSize;
      left: calc(50% - #{$largeTriangleSize});
      border-width: $largeTriangleSize $largeTriangleSize 0;
      border-style: solid;
      border-color: $bubbleColor transparent;
      display: block;
      width: 0;
    }

    &:after {
      content:"";
      position: absolute;
      bottom: -$smallTriangleSize;
      left: calc(50% - #{$smallTriangleSize});
      border-width: $smallTriangleSize $smallTriangleSize 0;
      border-style: solid;
      display: block;
      width: 0;
    }

    &.counter {
      font-size: 60px;
    }

    &.show {
      transform: translateY(0);
      opacity: 1;
    }

    .svg-inline--fa {
      padding-left: 0.25em;
      font-size: 40px;
    }

    .dialog {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      height: 100%;
      width: 100%;
    }
  }


  .nextValue {
    opacity: 0;
    transition: 0s;

    &.show {
      opacity: 1;
      transition: 1s;
    }

    &.openSesame {
      opacity: 0;
    }
  }

  .keyContainer {
    .key {
      background: #333;
      padding: 1em;
      border-top-left-radius: 1.5em;
      border-top-right-radius: 1.5em;
      display: flex;
      justify-content: space-between;
      width: 100px;

      .led {
        border-radius: 50%;
        height: 1em;
        width: 1em;
        background-color: gray;
      }

      &.pressed {
        .led {
          background-color: red;
        }

        button {
          margin-top: $buttonShadowHeight;
          margin-bottom: -$buttonShadowHeight;
          box-shadow: 0 0 $buttonShadowColor;
        }
      }
    }
  }
}



.pair .transmitter .value:after {
  border-color:$pairBackgroundColor transparent;
}

.pair.kiosk .transmitter .value:after {
  border-color:$pairKioskBackgroundColor transparent;
}

.pair .outOfRange .transmitter .value:after {
  border-color:$outOfRangeTransmitterColor transparent;
}
